@using System.Globalization
@model BecoSoftAssignment.Models.ProductDetailViewModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <!-- LEFT COLUMN: Gallery -->
    <div class="col-lg-7">
        <div class="product-gallery d-flex">
            <!-- Thumbnails (left) -->
            <div class="thumbs-wrap">
                <div id="thumbList" class="thumbs">
                    @for (var i = 0; i < Model.ImageUrls.Count; i++)
                    {
                        var src = Model.ImageUrls[i];
                        var isActive = i == 0 ? "active" : "";
                        <img src="@src"
                             class="thumb @isActive"
                             data-index="@i"
                             alt="Product image @(i + 1)" />
                    }
                </div>
            </div>

            <!-- Hero image with navigation arrows -->
            <div class="hero-wrap position-relative">
                <button class="nav-arrow prev" type="button" aria-label="Previous image">
                    <i class="fas fa-chevron-left"></i>
                </button>

                <img id="heroImage" src="@Model.ImageUrls[0]" alt="@Model.Title" class="img-fluid hero-img" />

                <button class="nav-arrow next" type="button" aria-label="Next image">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>

        <!-- Image note and pagination dots -->
        <div class="pager-block">
            <small class="text-muted img-note">Images are as true to life as possible</small>
            <div class="pager-dots">
                @for (var i = 0; i < Model.ImageUrls.Count; i++)
                {
                    var active = i == 0 ? "active" : "";
                    <span class="dot @active" data-index="@i" role="button" aria-label="View image @(i + 1)"></span>
                }
            </div>
        </div>
    </div>

    <!-- RIGHT COLUMN: Product Information -->
    <div class="col-lg-5">
        <h1 class="h2 mb-2">@Model.Title</h1>

        <!-- Price section -->
        <div class="mb-3 product-price">
            @if (Model.DiscountedPrice.HasValue)
            {
                <span class="product-old-price text-muted" style="text-decoration: line-through;">
                    @Model.Price.ToString("C")
                </span>
                <span class="product-discount text-danger font-weight-bold"> @Model.DiscountedPrice.Value.ToString("C")</span>
            }
            else
            {
                <span class="product-discount text-primary font-weight-bold">@Model.Price.ToString("C")</span>
            }
        </div>

        <!-- Stock status -->
        <p class="mb-3 @(Model.InStock ? "text-success" : "text-danger")">
            <i class="fas @(Model.InStock ? "fa-check-circle" : "fa-times-circle") mr-1"></i>
            @(Model.InStock ? "In Stock" : "Out of Stock")
        </p>

        <!-- Action buttons -->
        <div class="d-flex flex-wrap align-items-center gap-2 mb-3">
            <button id="btnAddToCart" type="button"
                    class="btn btn-danger btn-pill @(Model.InStock ? "" : "disabled")"
                    data-price="@((Model.DiscountedPrice ?? Model.Price).ToString(CultureInfo.InvariantCulture))"
            @(Model.InStock ? "" : "disabled")>
                <i class="fas fa-shopping-cart mr-2"></i> Add to Cart
            </button>

            <button type="button" class="btn btn-warning ml-2 btn-pill">
                <i class="fas fa-heart mr-2"></i> Add to Wishlist
            </button>
        </div>

        <!-- Promotions link -->
        <div class="mb-4">
            <a href="javascript:void(0)" class="btn btn-outline-danger btn-sm rounded-pill px-3">
                See all our promotions
            </a>
        </div>

        <!-- AVAILABILITY SECTION -->
        <div class="availability mb-4">
            <h3 class="h5 mb-3">Availability</h3>

            <!-- Online availability -->
            <div class="avail-row d-flex justify-content-between align-items-center py-2 border-bottom">
                <div class="label font-weight-bold">Online Availability</div>
                <div class="value @(Model.InStock ? "text-success" : "text-danger")">
                    @(Model.InStock ? "In stock" : "Out of stock")
                </div>
            </div>

            <!-- Store pickup header -->
            <div class="avail-row d-flex justify-content-between align-items-center py-2 border-bottom">
                <div class="label font-weight-bold">Pick up in one of our stores</div>
                <div class="text-muted small">Choose your store</div>
                <div class="text-muted"><i class="fas fa-angle-down"></i></div>
            </div>

            <!-- Turnhout store -->
            <div class="avail-row d-flex justify-content-between align-items-center py-3 border-bottom">
                <div class="store-info">
                    <div class="font-weight-bold">Turnhout</div>
                    <span class="status text-success small">In stock and available immediately</span>
                </div>
                <div>
                    <a class="btn btn-outline-danger btn-sm pickup-btn" href="javascript:void(0)">
                        Order for pickup in Turnhout
                    </a>
                </div>
            </div>

            <!-- Lommel store -->
            <div class="avail-row d-flex justify-content-between align-items-center py-3">
                <div class="store-info">
                    <div class="font-weight-bold">Lommel</div>
                    <span class="status text-success small">In stock and available immediately</span>
                </div>
                <div>
                    <a class="btn btn-outline-danger btn-sm pickup-btn" href="javascript:void(0)">
                        Order for pickup in Lommel
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<hr class="my-5" />

<!-- Product tabs -->
@Html.Partial("_TabsPartial", Model)

<hr class="my-5" />

<!-- Related products -->
@Html.Partial("_RelatedProductsPartial", Model.RelatedProducts)